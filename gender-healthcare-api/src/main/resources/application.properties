# ============================
# DATABASE - MySQL
# ============================
spring.datasource.url=jdbc:mysql://localhost:3306/gender_healthcare?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate tự động tạo bảng
# 'update': Hibernate sẽ tự động tạo/cập nhật schema database dựa trên các Entity.
#           Sử dụng cẩn thận trong production vì có thể gây mất dữ liệu.
#           Tốt cho phát triển giai đoạn đầu.
# 'create-drop': Mỗi khi ứng dụng khởi động, nó sẽ DROP tất cả các bảng hiện có, sau đó CREATE lại từ đầu.
#                Khi ứng dụng dừng, nó sẽ DROP các bảng đó. Chỉ dùng cho phát triển hoặc test.
# 'none': Hibernate sẽ không tự động tạo/cập nhật schema. Schema phải được quản lý thủ công
#         hoặc bằng các công cụ migration (Liquibase/Flyway). KHUYẾN NGHỊ cho PRODUCTION.
spring.jpa.hibernate.ddl-auto=update

# Hiển thị SQL log
spring.jpa.show-sql=true
# Định dạng SQL cho dễ đọc trong log
spring.jpa.properties.hibernate.format_sql=true

# Chạy file SQL khởi tạo dữ liệu (ví dụ: data.sql, schema.sql trong src/main/resources)
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8
spring.jpa.defer-datasource-initialization=true

# Hibernate dialect (cần chọn đúng cho phiên bản MySQL của bạn)
# Với MySQL 8 trở lên, nên dùng MySQL8Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


# ============================
# SERVER CONFIG
# ============================
server.port=8086


# ============================
# JWT Configuration
# ============================
# Khóa bí mật cho JWT. PHẢI LÀ MỘT CHUỖI DÀI, NGẪU NHIÊN VÀ ĐƯỢC GIỮ BÍ MẬT TUYỆT ĐỐI.
# Ví dụ: Một chuỗi Base64 được tạo từ 64 bytes ngẫu nhiên (dành cho HS512)
# Trong môi trường PRODUCTION, KHÔNG NÊN đặt trực tiếp ở đây,
# mà nên dùng biến môi trường (Environment Variable) hoặc dịch vụ quản lý bí mật.
jwt.secret=ZklN7dQKtUB/eJHNKevcGXKr9GEh/CYGec9i0ZfkmQFeWUD0npk60wxnhMjS9xxu

# Thời gian hết hạn của JWT token tính bằng mili giây (milliseconds).
# Ví dụ: 86400000ms = 24 giờ (24 * 60 * 60 * 1000)
jwt.expiration=86400000


# ============================
# SPRINGDOC (Swagger UI)
# ============================
# Đường dẫn cho API docs (OpenAPI JSON/YAML)
springdoc.api-docs.path=/api-docs
# Đường dẫn cho Swagger UI (giao diện đồ họa để khám phá API)
springdoc.swagger-ui.path=/swagger-ui.html